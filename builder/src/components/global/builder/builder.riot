<builder>
  <div>
    <parties
      if={state.state === 'Parties'}
      value={state.parties}
      onValue={onValue('parties')}
      onDone={onPartiesDone} />

    <agreements
      if={state.state === 'Agreements'}
      parties={state.parties}
      value={state.agreements}
      onValue={onValue('agreements')}
      onDone={onAgreementsDone} />

    <signatures
      if={state.state === 'Signatures'}
      parties={state.parties}
      value={state.signatures}
      onValue={onValue('signatures')}
      onDone={onSignaturesDone} />
  
    <contract
      if={state.state === 'Contract'}
      contract={contract} />

    <hr />

    <div>
      <button class="bg-red br1 pv2 ph3" onclick={reset}>Reset</button>
    </div>
  </div>

  <script>
    import Parties from '../../screens/parties/parties.riot'
    import Agreements from '../../screens/agreements/agreements.riot'
    import Contract from '../../screens/contract/contract.riot'
    import Signatures from '../../screens/signatures/signatures.riot'

    const State = {
      Parties: 'Parties',
      Agreements: 'Agreements',
      Signatures: 'Signatures',
      Contract: 'Contract'
    }

    const emptyState = () => ({
      state: State.Parties,
      parties: null,
      agreements: null,
      signatures: null
    })

    export default {
      components: {
        Parties,
        Agreements,
        Signatures,
        Contract
      },
      state: emptyState(),
      onValue (field) {
        return (value) => {
          this.update({
            [field]: value
          })
        }
      },
      onPartiesDone () {
        this.update({ state: State.Agreements })
      },
      onAgreementsDone () {
        this.update({ state: State.Signatures })
      },
      onSignaturesDone () {
        this.update({ state: State.Contract })
      },
      get contract () {
        return {
          parties: this.state.parties,
          agreements: this.state.agreements,
          signatures: this.state.signatures
        }
      },
      reset ()  {
        this.update(emptyState())
      }
    }
  </script>
</builder>
