<currencySwap>
  <frame-box remove="Remove Agreement" onRemove={props.onRemove} >
    <p class="b mt0 mb3">Currency Swap</p>

    <label class="mt2">
      <span class="b mr1">Payer A</span>
      <party-select
        parties={props.parties}
        onValue={onChange('payerA')}
        selected={agreement.payerA} />
    </label>

    <label class="mt2">
      <span class="b mr1">Principal A</span>
      <money value={agreement.principalA} onValue={onChange('principalA')} />
    </label>

    <label class="mt2">
      <span class="b mr1">Payer B</span>
      <party-select
        parties={props.parties}
        onValue={onChange('payerB')}
        selected={agreement.payerB} />
    </label>

    <label class="mt2">
      <span class="b mr1">Principal B</span>
      <money value={agreement.principalB} onValue={onChange('principalB')} />
    </label>

    <label class="mt2">
      <span class="b mr1">Exchange Rate</span>
      <exchange-rate value={agreement.impliedExchangeRate} disabled={true} />
    </label>

    <label class="mt2">
      <span class="b mr1">Effective Date</span>
      <date value={agreement.effectiveDate} onValue={onChange('effectiveDate')} />
    </label>

    <label class="mt2">
      <span class="b mr1">Maturity Date</span>
      <date value={agreement.maturityDate} onValue={onChange('maturityDate')} />
    </label>

    <label class="mt2" if={agreement.endExchangeRate}>
      <span class="b mr1">End Exchange Rate</span>
      <span>
        <exchange-rate value={agreement.endExchangeRate} onValue={onChange('endExchangeRate')} />
        <button
          id="remove-end-exchange-rate"
          onclick={removeEndExchageRate}
          title="Remove End Exchange Rate"
          alt="Remove End Exchange Rate"
          class="bg-red round ml2">X</button>
      </span>
    </label>

    <button
      if={!agreement.endExchangeRate}
      id="add-end-exchange-rate"
      title="Add End Exchangeest Rate"
      alt="Add End Exchange Rate"
      class="db bg-green br1 pv2 ph3 mt2"
      onclick={addEndExchangeRate}>Add End Exchange Rate</button>

    <label class="mt2">
      <span class="b mr1">Interest</span>
      <span>TODO (can be optional)</span>
    </label>
  </frame-box>

  <script>
    import PartySelect from '../../primitives/party-select/party-select.riot'
    import Date from '../../primitives/date/date.riot'
    import Money from '../../primitives/money/money.riot'
    import ExchangeRate from '../../primitives/exchange-rate/exchange-rate.riot'
    import FrameBox from '../../frame-box/frame-box.riot'

    const emptyState = () => ({
      payerA: null,
      principalA: null,
      payerB: null,
      principalB: null,
      impliedExchangeRate: {
        baseCurrency: '',
        counterCurrency: '',
        rate: 1.0
      },
      endExchangeRate: null, // TODO: can be optional
      interest: null, // TODO: can be optional
      effectiveDate: null,
      maturityDate: null
    })

    export default {
      components: {
        PartySelect,
        Date,
        Money,
        ExchangeRate,
        FrameBox
      },
      get agreement () {
        const agreement = this.props.agreement || {}
        const currencySwap = agreement.currencySwap || {}

        return {
          ...emptyState(),
          ...currencySwap
        }
      },
      addEndExchangeRate () {
        this.onChange('endExchangeRate')({})
      },
      removeEndExchageRate () {
        this.onChange('endExchangeRate')(null)
      },
      onChange (field) {
        return (value) => {
          const agreement = this.agreement
          agreement[field] = value

          if (agreement.principalA && agreement.principalB) {
            const principalA = agreement.principalA
            const principalB = agreement.principalB

            agreement.impliedExchangeRate.baseCurrency = principalA.currency
            agreement.impliedExchangeRate.counterCurrency = principalB.currency

            if (principalA.amount !== 0 && principalB.amount !== 0) {
              agreement.impliedExchangeRate.rate = principalB.amount / principalA.amount
            }
          }

          this.props.onChange({ currencySwap: agreement })
        }
      }
    }
  </script>
</currencySwap>
